@model Bugtracker.Models.Ticket
@using Microsoft.AspNet.Identity;

@{ 
    Layout = null;
}

<h4 class="text-center">Edit Ticket</h4>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        @if (Model.AuthorId == User.Identity.GetUserId() || User.IsInRole("Administrator"))
        {
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Body">Description</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>
        }
        else
        {

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Title)
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2" for="Body">Description</label>
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Body)
                </div>
            </div>
        }

        @if (User.IsInRole("Developer"))
        {
            <div class="form-group">
                <label class="control-label col-md-2" for="StatusId">Status</label>
                <div class="col-md-10">
                    @Html.DropDownList("StatusId", ViewBag.TicketStatus as SelectList, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
                    @Html.HiddenFor(model => model.StatusId)
        }

        <div class="form-group">
            <label class="control-label col-md-2" for="TicketTypeId">Ticket Type</label>
            <div class="col-md-10">
                @Html.DropDownList("TicketTypeId", ViewBag.TicketType as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="PriorityId">Priority</label>
            <div class="col-md-10">
                @Html.DropDownList("PriorityId", ViewBag.TicketPriority as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PriorityId, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (User.IsInRole("Project Manager"))
        {
            <div class="form-group">
                <label class="control-label col-md-2" for="AssignedUserId">Developer</label>
                <div class="col-md-10">
                    @Html.DropDownList("AssignedUserId", ViewBag.AssignedUser as SelectList, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AssignedUserId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <label class="control-label col-md-2" for="AssignedUserId">Developer</label>
                <div class="col-md-10">
                    @if (Model.AssignedUserId != null)
                    {
                        <label>@Model.AssignedUser.UserName</label>
                        @Html.HiddenFor(model => model.AssignedUserId)
                    }
                    else
                    {
                        <label>Not Yet Assigned</label>
                        @Html.HiddenFor(model => model.AssignedUserId)
                    }
                </div>
            </div>
        }

        @if (User.IsInRole("Administrator"))
        {
        <div class="form-group">
            <label class="control-label col-md-2" for="ProjectId">Project</label>
            <div class="col-md-10">
                @Html.DropDownList("ProjectId", ViewBag.ProjectList as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>
        }
        else
        {
            @Html.HiddenFor(model => model.ProjectId)
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button data-dismiss="modal" type="button" class="btn btn-default center">Cancel</button>
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}