@model Bugtracker.Models.Ticket
@using Microsoft.AspNet.Identity;

<div class="row">
<div class="col-sm-6">
    <div class="box box-solid">
        <div class="box-header with-border">
            <a href="@Url.Action("Index", "Tickets")"><i class="fa fa-chevron-left"></i></a>
            <h3 class="box-title">Details</h3>
            <div class="box-tools pull-right">
                <i class="fa fa-pencil"></i>
            </div>
        </div>
        <div class="box-body">
            <dl class="dl-horizontal">

                <dt>
                    Project Name
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Project.Name)
                </dd>

                <dt>
                    Ticket Title
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Title)
                </dd>

                <dt>
                    Description
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Body)
                </dd>

                <dt>
                    Status
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Status.Name)
                </dd>

                <dt>
                    Type
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.TicketType.Type)
                </dd>

                <dt>
                    Priority
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Priority.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Created)
                </dt>

                <dd>
                    @Model.Created.ToString("d")
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Updated)
                </dt>

                <dd>
                    @if (Model.Updated.HasValue)
            {
                var updated = Model.Updated.Value.ToString("d");
                        @updated
                    }
                </dd>
                <dt>
                    Attachments
                </dt>

                <dd>
                    <ul class="list-unstyled">
                        @if (Model.Attachments.Count != 0)
                        {
                            foreach (var attachment in Model.Attachments)
                            {
                                <li>
                                    <a href="@attachment.FileURL">@attachment.Name</a>
                                    <small>
                                        - @attachment.User.UserName (@attachment.Uploaded.ToString("d"))
                                        @if (attachment.UserId == User.Identity.GetUserId())
                                        {
                                            @*@:[ <a href="@Url.Action("DeleteAttachment", "Tickets", new { id = attachment.Id, tId = Model.Id })">delete</a> ]*@
                                            @: [ <a href="#" data-toggle="modal" data-target="#basic" class="deleteAttach" id="@attachment.Id">Delete</a> ]
                            }
                                    </small>
                                </li>
                            }
                        }
                        else
                        {
                            <li>No attachments have been uploaded.</li>
                        }
                    </ul>
                    @if (User.Identity.IsAuthenticated && User.Identity.GetUserId() == Model.AuthorId || User.Identity.GetUserId() == Model.AssignedUserId || User.IsInRole("Administrator"))
                    {
                    using (Html.BeginForm("Upload", "Tickets", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <input type="file" class="btn btn-default" name="files" multiple />
                        <button class="btn btn-default" name="tId" value="@Model.Id">Upload</button>
                    }
                    }
                </dd>
            </dl>
        </div> <!--box body-->
        <div class="box-footer">
            @if (User.Identity.IsAuthenticated && User.Identity.GetUserId() == Model.AuthorId || User.Identity.GetUserId() == Model.AssignedUserId || User.IsInRole("Administrator"))
            {
                using (Html.BeginForm("CreateComment", "Tickets", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="well">
                        <h4>Leave a Comment:</h4>
                        <div class="form-group">
                            <input type="hidden" name="TicketId" value="@Model.Id" />
                            <textarea class="form-control" required data-validation-required-message="Please enter your message" rows="3" name="Body"></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                }
            }
        </div> <!--box footer-->
    </div> <!--box-->
</div>

<div class="col-sm-6" id="comments" style="padding:0">
    @foreach (var comment in Model.Comments.Reverse())
    {
        <div class="box box-solid">
            <div class="box-header with-border">
                <h3 class="box-title">
                    <i class="fa fa-commenting-o"></i> @Html.Raw(comment.Author.DisplayName)
                </h3>
                <small>
                    on @Html.Raw(comment.Created.ToString("D"))
                </small>
                <div class="box-tools pull-right">
                    @if (Request.IsAuthenticated && User.Identity.GetUserId() == comment.AuthorId)
                    {
                        <a href="@Url.Action("EditComment", "Tickets", new { id = comment.Id })" data-toggle="modal" data-target="#edit-comment"><i class="fa fa-pencil"></i></a>
                    }
                    @if (Request.IsAuthenticated && (User.IsInRole("Administrator")))
                    {
                        <a href="#" data-toggle="modal" data-target="#basic" class="deleteComment" id="@comment.Id" tId="@Model.Id"><i class="fa fa-trash"></i></a>
                    }
                </div>
            </div>
            <div class="box-body">
                <div class="col-sm-12">
                    <div class="col-sm-2">
                        <img class="img-circle media-object pull-left" src="@comment.Author.ProfileIcon" width="75" height="75" alt="">
                    </div>
                    <div class="col-sm-10">
                        @Html.Raw(comment.Body)
                    </div>
                </div>
                </div>
            <div class="box-footer">
                @if (comment.Updated != null)
                {
                    <h6><em>Edited on @Html.Raw(comment.Updated.Value.ToString("D"))</em></h6>
                }
            </div>

            </div>
            }
</div>
    </div>

@*<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to list", "Index")
</p>*@

<!--Delete Modal-->
<div class="modal fade" id="basic" tabindex="-1" role="alert" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">Delete Confirmation</h4>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this item?
            </div>
            <div class="modal-footer">
                <button data-dismiss="modal" type="button" class="btn btn-default">Cancel</button>
                <button id="btnContinueDelete" type="button" class="btn btn-primary">Delete</button>
            </div>
        </div>
    </div>
</div>

<!--Edit Comment Modal-->
<div class="modal fade" id="edit-comment" tabindex="-1" role="alert" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content ticketbox">
        </div>
    </div>
</div>

@section CustomJS {
<script>
    var commentId;
    var attachmentId;
$(".deleteAttach").click(function(e) {
    attachmentId = $(this).attr('id');
});

$(".deleteComment").click(function (e) {
    commentId = $(this).attr('id');
});

$('#btnContinueDelete').click(function () {
    if (attachmentId != null) {
        window.location = "/Tickets/DeleteAttachment/" + attachmentId;
    }
    else if (commentId != null) {
        window.location = "/Tickets/DeleteComment/" + commentId;
    }
});

$('.modal').on('hidden.bs.modal', function (e) {
    $(this).removeData();
});
</script>
}